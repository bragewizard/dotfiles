# Typical laptop setup, with wifi, brightness, battery etc, for
# i3/Sway.

# For X11/i3, you'll want to replace calls to swaymsg with i3-msg, and
# the sway-xkb module with the xkb module.
roboto: &roboto Inter Semibold:pixelsize=16"
# roboto: &roboto Departure Mono:pixelsize=16"
# roboto: &roboto Liga SFMonoNerdFont Medium:pixelsize=16"
# roboto: &roboto Pixel Code:pixelsize=14"
yellow: &yellow EBCB8BFF

# This is THE bar configuration
bar:
  height: 22
  location: top
  spacing: 5
  margin: 0
  # Default font
  font: *roboto
  monitor: "${MONITOR}"

  foreground: e0e0e0ff
  background: 282828ff

  left:
    - i3:
        sort: ascending
        anchors: # Not used (directly) by f00bar; used here to avoid duplication
          - string: &i3_common {margin: 0, on-click: "swaymsg --quiet workspace {name}"}
          - string: &default {<<: *i3_common, text: " {name} "}
          - focused: &focused
              foreground: 202020FF
              deco:
                stack:
                  - background:
                      color: *yellow
          - unfocused: &unfocused
              foreground: e0e0e0ff
          - invisible: &invisible {foreground: ffffff55}
          - urgent: &urgent
              foreground: ffff80ff
          - map: &i3_mode
              default:
                - string:
                    margin: 10
                    text: "{mode}"
                    deco: {background: {color: ffffff35}}
                - empty: {right-margin: 14}
              conditions:
                mode == default: {empty: {}}
        content:
          "":
            map:
              conditions:
                state == focused:   {string: {<<: [*default, *focused]}}
                state == unfocused: {string: {<<: [*default, *unfocused]}}
                state == visible:   {string: {<<: [*default, *unfocused]}}
                state == invisible: {string: {<<: [*default, *invisible]}}
                state == urgent:    {string: {<<: [*default, *urgent]}}
          current:
            map : {<<: *i3_mode}
  # center:
  #   - i3:
  #       content:
  #         current: { string: {text: "{application}"}}
  right:
    # - network:
    #     content:
    #       map:
    #         default: {empty: {}}
    #         conditions:
    #           name == enp4s0f4u1u1:
    #             map:
    #               conditions:
    #                 ~carrier: {empty: {}}
    #                 carrier:
    #                   map:
    #                     default: {string: {text: 󰈀 , font: *roboto, foreground: *yellow}}
    #                     conditions:
    #                       state == up && ipv4 != "": {string: {text: 󰈀 , font: *roboto, foreground: *yellow}}
    # - network:
    #     poll-interval: 1000
    #     content:
    #       map:
    #         default: {empty: {}}
    #         conditions:
    #           name == wlp2s0:
    #             map:
    #               default: {string: {text:  , font: *roboto, foreground: *yellow}}
    #               conditions:
    #                 state == down: {string: {text:  , font: *roboto, foreground: *yellow}}
    #                 state == up:
    #                   map:
    #                     default:
    #                       - string: {text:  , font: *roboto, foreground: *yellow}
    #                       # - string: {text: "{ssid}"}

    #                     conditions:
    #                       ipv4 == "":
    #                         - string: {text:  , font: *roboto, foreground: *yellow}
                            # - string: {text: "{ssid}", foreground: ffffff66}
    - pipewire:
        content:
          map:
            conditions:
              type == "sink":
                map:
                  conditions:
                    muted:
                      list:
                        spacing: 0
                        items:
                          - string: {text: "   {cubic_volume}%"}
                    ~muted:
                        ramp:
                          tag: linear_volume
                          items:
                            - string: {text: "   {cubic_volume}%"}
    - sway-xkb:
        identifiers: [5426:624:Razer_Razer_Blade_Keyboard]
        content:
          - string: {text:  , font: *roboto, foreground: *yellow}
          - string: {text: "{layout}"}
    - clock:
        time-format: "%a %d %H:%M"
        content:
          - string: {text: "{time}"}
    - battery:
        name: BAT0
        poll-interval: 30000
        anchors:
          discharging: &discharging
            list:
              items:
                - ramp:
                    tag: capacity
                    items:
                      - string: {text:   , foreground: *yellow, font: *roboto}
                      - string: {text:   , foreground: *yellow, font: *roboto}
                      - string: {text:   , foreground: *yellow, font: *roboto}
                      - string: {text:   , foreground: *yellow, font: *roboto}
                      - string: {text:   , foreground: *yellow, font: *roboto}
                      - string: {text:   , foreground: *yellow, font: *roboto}
                      - string: {text:   , foreground: *yellow, font: *roboto}
                      - string: {text:   , foreground: *yellow, font: *roboto}
                      - string: {text:   , foreground: *yellow, font: *roboto}
                      - string: {text:   , foreground: *yellow, font: *roboto}
                - string: {text: "  {capacity}%"}
        content:
          map:
            conditions:
              state == unknown:
                <<: *discharging
              state == discharging:
                <<: *discharging
              state == charging:
                - string: {text:   , foreground: *yellow, font: *roboto}
                - string: {text: " {capacity}%"}
              state == full:
                - string: {text:   , foreground: *yellow, font: *roboto}
                - string: {text: "  {capacity}%"}
              state == "not charging":
                - ramp:
                    tag: capacity
                    items:
                      - string: {text:    , foreground: *yellow, font: *roboto}
                      - string: {text:    , foreground: *yellow, font: *roboto}
                      - string: {text:    , foreground: *yellow, font: *roboto}
                      - string: {text:    , foreground: *yellow, font: *roboto}
                      - string: {text:    , foreground: *yellow, font: *roboto}
                      - string: {text:    , foreground: *yellow, font: *roboto}
                      - string: {text:    , foreground: *yellow, font: *roboto}
                      - string: {text:    , foreground: *yellow, font: *roboto}
                      - string: {text:    , foreground: *yellow, font: *roboto}
                      - string: {text:    , foreground: *yellow, font: *roboto}
                - string: {text: " {capacity}%"}
